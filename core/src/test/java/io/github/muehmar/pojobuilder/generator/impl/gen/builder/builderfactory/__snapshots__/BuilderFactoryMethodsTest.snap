genericSamplePojo=[
java.lang.String
java.util.List

public static <T extends List<String>, S> BuilderStages.Builder0<T, S> create() {
  return new BuilderStages.Builder0<>(new Builder<T, S>());
}

public static <T extends List<String>, S> BuilderStages.Builder0<T, S> customerBuilder() {
  return new BuilderStages.Builder0<>(new Builder<T, S>());
}

public static <T extends List<String>, S> BuilderStages.Builder0<T, S> create(Class<T> classOfT, Class<S> classOfS) {
  return new BuilderStages.Builder0<>(new Builder<T, S>());
}

public static <T extends List<String>, S> BuilderStages.Builder0<T, S> customerBuilder(Class<T> classOfT, Class<S> classOfS) {
  return new BuilderStages.Builder0<>(new Builder<T, S>());
}

public static <T extends List<String>, S> BuilderStages.FullBuilder0<T, S> createFull() {
  return new BuilderStages.FullBuilder0<>(new Builder<T, S>());
}

public static <T extends List<String>, S> BuilderStages.FullBuilder0<T, S> fullCustomerBuilder() {
  return new BuilderStages.FullBuilder0<>(new Builder<T, S>());
}

public static <T extends List<String>, S> BuilderStages.FullBuilder0<T, S> createFull(Class<T> classOfT, Class<S> classOfS) {
  return new BuilderStages.FullBuilder0<>(new Builder<T, S>());
}

public static <T extends List<String>, S> BuilderStages.FullBuilder0<T, S> fullCustomerBuilder(Class<T> classOfT, Class<S> classOfS) {
  return new BuilderStages.FullBuilder0<>(new Builder<T, S>());
}
]


genericSamplePojoFullBuilderDisabled=[
java.lang.String
java.util.List

public static <T extends List<String>, S> BuilderStages.Builder0<T, S> create() {
  return new BuilderStages.Builder0<>(new Builder<T, S>());
}

public static <T extends List<String>, S> BuilderStages.Builder0<T, S> customerBuilder() {
  return new BuilderStages.Builder0<>(new Builder<T, S>());
}

public static <T extends List<String>, S> BuilderStages.Builder0<T, S> create(Class<T> classOfT, Class<S> classOfS) {
  return new BuilderStages.Builder0<>(new Builder<T, S>());
}

public static <T extends List<String>, S> BuilderStages.Builder0<T, S> customerBuilder(Class<T> classOfT, Class<S> classOfS) {
  return new BuilderStages.Builder0<>(new Builder<T, S>());
}

]


genericSamplePojoStandardBuilderDisabled=[
java.lang.String
java.util.List
.
.
public static <T extends List<String>, S> BuilderStages.FullBuilder0<T, S> createFull() {
  return new BuilderStages.FullBuilder0<>(new Builder<T, S>());
}

public static <T extends List<String>, S> BuilderStages.FullBuilder0<T, S> fullCustomerBuilder() {
  return new BuilderStages.FullBuilder0<>(new Builder<T, S>());
}

public static <T extends List<String>, S> BuilderStages.FullBuilder0<T, S> createFull(Class<T> classOfT, Class<S> classOfS) {
  return new BuilderStages.FullBuilder0<>(new Builder<T, S>());
}

public static <T extends List<String>, S> BuilderStages.FullBuilder0<T, S> fullCustomerBuilder(Class<T> classOfT, Class<S> classOfS) {
  return new BuilderStages.FullBuilder0<>(new Builder<T, S>());
}
]


samplePojo=[
.
.
public static BuilderStages.Builder0 create() {
  return new BuilderStages.Builder0(new Builder());
}

public static BuilderStages.Builder0 customerBuilder() {
  return new BuilderStages.Builder0(new Builder());
}

public static BuilderStages.FullBuilder0 createFull() {
  return new BuilderStages.FullBuilder0(new Builder());
}

public static BuilderStages.FullBuilder0 fullCustomerBuilder() {
  return new BuilderStages.FullBuilder0(new Builder());
}

]


samplePojoFullBuilderDisabled=[
.
.
public static BuilderStages.Builder0 create() {
  return new BuilderStages.Builder0(new Builder());
}

public static BuilderStages.Builder0 customerBuilder() {
  return new BuilderStages.Builder0(new Builder());
}

]


samplePojoStandardBuilderDisabled=[
.
.

public static BuilderStages.FullBuilder0 createFull() {
  return new BuilderStages.FullBuilder0(new Builder());
}

public static BuilderStages.FullBuilder0 fullCustomerBuilder() {
  return new BuilderStages.FullBuilder0(new Builder());
}

]